messages=SELECT USER_FROM, MESSAGE, TIME_STAMP, STATUS.TITLE AS STATUS FROM MESSAGE JOIN STATUS ON MESSAGE.STATUS = STATUS.ID ORDER BY TIME_STAMP DESC LIMIT ?;
newmessage=INSERT INTO MESSAGE(USER_FROM, MESSAGE, TIME_STAMP, STATUS) VALUES(?, ?, ?, ?);
unkick=DELETE FROM MESSAGE WHERE STATUS = 3 AND MESSAGE = ?;
newuser=INSERT INTO USER(NICK, ROLE) VALUES(?, ?);
roleuser=SELECT TITLE AS ROLE FROM USER JOIN ROLE ON USER.ROLE = ROLE.ID WHERE NICK = ?;
userbynick=SELECT NICK, TITLE AS ROLE FROM USER JOIN ROLE ON USER.ROLE = ROLE.ID WHERE NICK = ?;
kickusers=SELECT NICK, TITLE AS ROLE FROM USER JOIN ROLE ON USER.ROLE = ROLE.ID WHERE NICK IN (SELECT MESSAGE AS NICK FROM MESSAGE WHERE STATUS = 3) ORDER BY NICK;
loggingusers=SELECT NICK, ROLE.TITLE AS ROLE FROM MESSAGE JOIN STATUS ON MESSAGE.STATUS = STATUS.ID JOIN USER ON MESSAGE.USER_FROM = USER.NICK JOIN ROLE ON USER.ROLE = ROLE.ID WHERE STATUS = 1 OR STATUS = 4 GROUP BY NICK HAVING (COUNT(STATUS) % 2) <> 0 AND NICK not in (SELECT MESSAGE AS NICK FROM MESSAGE WHERE STATUS = 3) ORDER BY NICK;
kickcheck=SELECT DISTINCT EXISTS (SELECT MESSAGE FROM MESSAGE JOIN STATUS ON MESSAGE.STATUS = STATUS.ID JOIN USER ON MESSAGE.USER_FROM = USER.NICK WHERE STATUS = 3 AND MESSAGE = ?) AS Result FROM MESSAGE;
logincheck=SELECT DISTINCT CASE WHEN ? NOT IN (SELECT NICK FROM MESSAGE JOIN STATUS ON MESSAGE.STATUS = STATUS.ID JOIN USER ON MESSAGE.USER_FROM = USER.NICK) THEN FALSE WHEN 'LOGOUT' = (SELECT TITLE FROM MESSAGE JOIN STATUS ON MESSAGE.STATUS = STATUS.ID JOIN USER ON MESSAGE.USER_FROM = USER.NICK WHERE nick = ? ORDER BY TIME_STAMP DESC LIMIT 1) THEN FALSE ELSE TRUE END AS Result FROM MESSAGE;